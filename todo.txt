List of things to do on the hearts game:

1) SIMULATE PLAY METHOD
	-> Support for starting halfway through a trick
	-> Method outline has been added
		-> Need to ensure cards / hands are correct
		-> Bugs causing array index out of bounds	

2) Save and keep track of your versions
	-> Have baseline naive algorithm. It's not the best but it could be used to test improvements on
	-> Potential write up needed?

3) Add new player types with some advanced logic rules GO OVER
	-> If last to play in trick
		-> Play highest card of the suit ELSE
		-> Play Queen of Spades ELSE
		-> Play highest card of suit with fewset remaining cards
		-> Check to see if trick has hearts - if not, win it
	-> If leading the trick
		-> Open with the lowest card...?
	-> If 2nd or 3rd in trick
		-> Play heighest card of suit that will not win trick ELSE
		-> Play Queen of Spades ELSE
		-> Play highest card of suit with fewset remaining cards

AFTER FIRST METHOD TESTING:
Since the end of the first implementation is approaching, we have to consider what implementation will be implemented next. After some testing / discussion with Michael Albert, coding for the second implementation should begin.

IDEAS FOR SECOND IMPLEMENTATION:

1) Currently, one MCTS is drawn and at each node a simulate play method is completed, each with a different random set of cards.
	-> Instead of having one tree, have multiple
	-> The tree assigns hands at the start, then traverses
	-> Caluclate the best trees as opposed to best nodes

2) Implement the UCT algorithm for the Select method.

3) Improve the DoubleDummy playout with more advanced logic
	-> E.g. play highest card unless winning trick
	-> Maybe try to get rid of one suit first

4) Add an option for the DoubleDummy simulation to have preset players as the logic
	-> Make modular




SOME NOTES:

SELECT METHOD:

Currently, the select method works in a very naive fashion.
For each node, we calculate the average score of that node,
and then we subtract this from 13 to get X. We then add
X + 1 of the node to an array.

Once we have done this for all nodes, we randomly select from
this array. This is a very simple approach for biasing nodes
with a low average score.

MISC NOTES / OBSERVATIONS:

* Had to randomise the start player for low trick games
	-> It seems that the start player has a disadvantage, assumed to be
	   because other players could not follow suit.
